// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = ["sqlite", "postgres"]
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id                Int       @default(autoincrement()) @id
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  name              String?
  email             String    @unique
  hashedPassword    String?
  role              String    @default("user")
  sessions          Session[]
  courseMemberships CourseMembership[]
}

model Session {
  id                 Int       @default(autoincrement()) @id
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}

model Course {
  id                 Int       @default(autoincrement()) @id
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  title              String
  slug               String    @unique
  description        String?
  lessons            Lesson[]
  price              Int       @default(0)
  stripe_price_id    String?
}

model Lesson {
  id                 Int       @default(autoincrement()) @id
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  title              String
  description        String?
  videoUrl           String?
  course             Course?   @relation(fields: [courseId], references: [id])
  courseId           Int?
  slug               String    @unique
}

model CourseMembership {
  id                 Int       @default(autoincrement()) @id
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  course             Course?   @relation(fields: [courseId], references: [id])
  courseId           Int?
}
